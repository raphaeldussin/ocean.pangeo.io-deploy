version: 2
jobs:
  deploy:
    docker:
      - image: buildpack-deps:bionic-scm
    working_directory: ~/repo

    steps:
      - run:
          name: Install base apt packages
          command: |
            apt-get update --yes
            apt-get install --yes python3 python3-venv git-crypt

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-gcloud-212-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-gcloud-212-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade -r requirements.txt
            curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-212.0.0-linux-x86_64.tar.gz | tar -C venv/ -xzf -
            # Be careful with quote ordering here. ${PATH} must not be expanded
            echo 'export PATH="~/repo/venv/bin:~/repo/venv/google-cloud-sdk/bin:${PATH}"' >> ${BASH_ENV}

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-gcloud-212-{{ checksum "requirements.txt" }}

      - setup_remote_docker

      - run:
          name: Authenticate to Google
          command: |
            echo ${GCR_READWRITE_KEY} > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            rm ${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT}
            gcloud --quiet config set compute/zone ${GOOGLE_ZONE}
            gcloud --quiet beta container clusters get-credentials ${GKE_CLUSTER} --zone=${GOOGLE_ZONE}

      - run:
          name: Build primary image if needed
          command: |
            hubploy-image-builder \
              --push \
              --registry-url https://us.gcr.io \
              --registry-username _json_key \
              --registry-password "${GCR_READWRITE_KEY}" \
              --repo2docker \
              deployments/${DEPLOYMENT}/image/ ${IMAGE_NAME}
          environment:
            PYTHONIOENCODING: utf-8

      - run:
          name: Unlock our secrets
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > ~/repo/key
            git crypt unlock ~/repo/key
            rm ~/repo/key

      - run:
          name: Install helm
          command: |
            curl https://storage.googleapis.com/kubernetes-helm/helm-v2.10.0-linux-amd64.tar.gz | \
              tar -xzf -
            mv linux-amd64/helm /usr/local/bin
            helm init --client-only
            helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
            helm repo add pangeo https://pangeo-data.github.io/helm-chart/
            helm repo update

      - run:
          name: Deploy hub
          command: |
            echo ${DEPLOYMENT} ${CIRCLE_BRANCH} ${IMAGE_NAME}
            hubploy-helm-deploy ${DEPLOYMENT} pangeo-deploy ${CIRCLE_BRANCH} \
              --namespace ${CIRCLE_BRANCH} \
              --set jupyterhub.singleuser.image.name=${IMAGE_NAME}

workflows:
  version: 2
  deploy:
    jobs:
    - deploy:
        # Only run this post merge
        filters:
          branches:
            only:
            - staging
